name: Build Jupyter Notebooks

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  JULIA_NUM_THREADS: '2'
  PYTHON_VERSION: '3.10'
  JULIA_VERSION: '1.7'

jobs:
  jupyter-notebook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: '**/requirements.txt'
      - name: Install Python dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f .ci/requirements.txt ]; then pip install -r .ci/requirements.txt; fi
      - name: Setup Julia ${{ env.JULIA_VERSION }}
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ env.JULIA_VERSION }}
      - name: Cache Julia
        uses: actions/cache@v3
        with:
          path: ~/.julia
          key: ${{ runner.os }}-julia-${{ env.JULIA_VERSION }}-${{ hashFiles('Project.toml') }}-${{ hashFiles('Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-${{ env.JULIA_VERSION }}-${{ hashFiles('Project.toml') }}-
            ${{ runner.os }}-julia-${{ env.JULIA_VERSION }}-
      - name: Install Julia dependencies
        run: |
          julia --color=yes --project="" -e 'import Pkg; Pkg.add("IJulia"); Pkg.build("IJulia")'
          julia --color=yes --project=@. -e 'import Pkg; Pkg.instantiate()'
      - name: Build Jupyter Notebook
        run: |
          jupyter nbconvert --to notebook --ExecutePreprocessor.timeout=600 --execute --inplace index.ipynb
          mkdir out && cp index.ipynb out/
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3.8.0
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: out/
          full_commit_message: ${{ github.event.head_commit.message }}
